<?xml version="1.0" encoding="UTF-8"?>
<?xml-model href="http://docbook.org/xml/5.1/rng/docbook.rng" schematypens="http://relaxng.org/ns/structure/1.0"?>
<?xml-model href="http://docbook.org/xml/5.1/sch/docbook.sch" type="application/xml" schematypens="http://purl.oclc.org/dsdl/schematron"?>
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"
    version="5.1" xml:id="gfix" xml:lang="ru">
    <info>
        <title>Утилита GFIX</title>
    </info>

    <indexterm>
        <primary>GFIX</primary>
    </indexterm>

    <para>Утилита <application>GFIX</application> является одним из основных инструментов
        администратора БД. Она позволяет: <itemizedlist>
            <listitem>
                <para>Выполнять принудительную чистку (sweep) базы данных; </para>
            </listitem>
            <listitem>
                <para>Изменять интервал автоматической чистки (sweep interval); </para>
            </listitem>
            <listitem>
                <para>Закрывать (shutdown) базу данных для получения монопольного доступа, и затем
                    снова открывать ее; </para>
            </listitem>
            <listitem>
                <para>Переводить базу в режимы «чтение/запись» или «только чтение»; </para>
            </listitem>
            <listitem>
                <para>Переключаться между синхронным и асинхронным вводом (Forced Writes); </para>
            </listitem>
            <listitem>
                <para>Изменять диалект БД; </para>
            </listitem>
            <listitem>
                <para>Устанавливать размер кэша для БД; </para>
            </listitem>
            <listitem>
                <para>Отыскивать повисшие транзакции и отменять или подтверждать их; </para>
            </listitem>
            <listitem>
                <para>Активировать или удалять теневые копии; </para>
            </listitem>
            <listitem>
                <para>Производить ремонт поврежденных баз данных. </para>
            </listitem>
        </itemizedlist></para>

    <para>Запуск GFIX осуществляется следующим образом:
        <synopsis>
gfix [<replaceable>&lt;commands and parameters&gt;</replaceable>] <replaceable>database_name</replaceable>        
    </synopsis>
    </para>

    <para>Если база данных состоит из нескольких файлов, то при запуске
            <application>gfix</application> необходимо указать первичный файл.</para>
    <para>Для того, чтобы выполнить любую операцию над базой данных с помощью gfix, необходимо
        пройти процедуру идентификации и аутентификации — указать имя и пароль пользователя, который
        имеет право на запуск сервиса gfix. Для указания имени и пароля пользователя используются
        переключатели <code>-user</code> и <code>-pa[ssword]</code>, соответственно, например:
        <synopsis>
gfix -user testuser -pa pass -role rdb$admin [<replaceable>&lt;commands&gt;</replaceable>] <replaceable>database_name</replaceable>         
    </synopsis>
    </para>
    <para>Необязательный переключатель <code>-role</code> задаёт имя роли, права которой будут
        учитываться при выполнении каких-либо действий утилиты.</para>
    <para>Имя пользователя и пароль можно не указывать, если в системе установлены контекстные
        переменные <envar>ISC_USER</envar> и <envar>ISC_PASSWORD</envar>. А также если используется
        доверительная аутентификация Windows (Win_Sspi), и пользователь системы, от имени которого
        запускается утилита, является членом группы администраторов.</para>

    <para>Запуск gfix без команды (или с неверной командой) или с переключателем -? приводит к
        отображению следующего экрана справочной информации: <screen>
<![CDATA[        
usage: gfix [options] <database>
plausible options are:
   -ac(tivate_shadow)   activate shadow file for database usage
   -at(tach)            shutdown new database attachments
   -b(uffers)           set page buffers <n>
   -co(mmit)            commit transaction <tr / all>
   -ca(che)             shutdown cache manager
   -fu(ll)              validate record fragments (-v)
   -fo(rce_shutdown)    force database shutdown
   -fe(tch_password)    fetch password from file
   -h(ousekeeping)      set sweep interval <n>
   -i(gnore)            ignore checksum errors
   -icu                 fix database to be usable with present ICU version
   -k(ill_shadow)       kill all unavailable shadow files
   -l(ist)              show limbo transactions
   -me(nd)              prepare corrupt database for backup
   -mo(de)              read_only or read_write database
   -nol(inger)          close database ignoring linger setting for it
   -n(o_update)         read-only validation (-v)
   -o(nline)            database online <single / multi / normal>
   -pr(ompt)            prompt for commit/rollback (-l)
   -pa(ssword)          default password
   -role                set SQL role name
   -r(ollback)          rollback transaction <tr / all>
   -sq(l_dialect)       set database dialect n
   -sw(eep)             force garbage collection
   -sh(utdown)          shutdown <full / single / multi>
   -tw(o_phase)         perform automated two-phase recovery
   -tra(nsaction)       shutdown transaction startup
   -tru(sted)           use trusted authentication
   -u(se)               use full or reserve space for versions
   -user                default user name
   -v(alidate)          validate database structure
   -w(rite)             write synchronously or asynchronously
   -z                   print software version number

    Options can be abbreviated to the unparenthesized characters  
]]>    
    </screen>
    </para>
    <para>Набор всех возможных опций утилиты GFIX, представлен ниже.</para>
    <table frame="topbot">
        <title>Команды и опции утилиты GFIX</title>
        <tgroup cols="2">
            <colspec colname="c1" colnum="1" colwidth="0.65*"/>
            <colspec colname="c2" colnum="2" colwidth="1.35*"/>
            <thead>
                <row>
                    <entry>Опция</entry>
                    <entry>Описание</entry>
                </row>
            </thead>
            <tbody>
                <row>
                    <entry><code>-ac[tivate_shadow] <replaceable>&lt;shadow
                            copy&gt;</replaceable></code></entry>
                    <entry><para>Параметр предназначен для активации теневой копии.
                                    <code><replaceable>&lt;shadow copy&gt;</replaceable></code> —
                            адрес и имя файла теневой копии (или первого из файлов).</para></entry>
                </row>
                <row>
                    <entry><code>-at[tach] <replaceable>&lt;n&gt;</replaceable></code></entry>
                    <entry><para>Дополнительный параметр к <code>-shut</code>. Предназначен для
                            запрета новых соединений с БД.
                                    <code><replaceable>&lt;n&gt;</replaceable></code> указывает
                            количество секунд, через которое произойдет отключение БД. Отключение
                            отменится, если к этому времени еще останутся активные
                            соединения.</para></entry>
                </row>
                <row>
                    <entry><code>-b[uffers] <replaceable>&lt;n&gt;</replaceable></code></entry>
                    <entry><para>Устанавливает новый размер кэша (буфера) БД.
                                    <code><replaceable>&lt;n&gt;</replaceable></code> — количество
                            страниц. Это значение перекрывает значение параметра
                                <parameter>DefaultDbCachePages</parameter> в
                                (<filename>firebird.conf</filename> и
                                <filename>databases.conf</filename>).</para></entry>
                </row>
                <row>
                    <entry><code>-co[mmit] {<replaceable>&lt;ID&gt;</replaceable> |
                        all}</code></entry>
                    <entry><para>Завершает подтверждением зависшую транзакцию с идентификатором
                                    <code><replaceable>&lt;ID&gt;</replaceable></code>, или все
                            зависшие транзакции <code>all</code>.</para></entry>
                </row>
                <row>
                    <entry><code>-ca[che]</code></entry>
                    <entry><para>Не используется.</para></entry>
                </row>
                <row>
                    <entry><code>-fu[ll]</code></entry>
                    <entry><para>Используется вместе с <code>-v[alidate]</code> для проверки
                            структур записей и таблиц; освобождает неназначенные фрагменты
                            записей.</para></entry>
                </row>
                <row>
                    <entry><code>-fo[rce_shutdown]
                        <replaceable>&lt;n&gt;</replaceable></code></entry>
                    <entry><para>Дополнительный параметр к <code>-shut</code>. Предназначен для
                            принудительного закрытия базы данных.
                                    <code><replaceable>&lt;n&gt;</replaceable></code> указывает
                            количество секунд, через которое произойдет закрытие. Если остались
                            активные пользователи, они отключатся, последние результаты их работы
                            будут потеряны. Такое средство нужно применять с осторожностью, как
                            последнюю возможность.</para></entry>
                </row>
                <row>
                    <entry><code>-fe[tch_password] {<replaceable>&lt;password file
                                name&gt;</replaceable> | stdin | /dev/tty}</code></entry>
                    <entry><para>Извлекает пароль из файла. Если имя файла указано как stdin, то
                            пользователю будет предложено ввести пароль. В системах POSIX имя файла
                                <filename>/dev/tty</filename> также приведет к запросу
                            пароля.</para></entry>
                </row>
                <row>
                    <entry><code>-h[ousekeeping] <replaceable>&lt;n&gt;</replaceable></code></entry>
                    <entry><para>Изменяет интервал транзакций для автоматической чистки sweep.
                                    <code><replaceable>&lt;n&gt;</replaceable></code> устанавливает
                            новый интервал. Если <code>n = 0</code>, автоматическая чистка
                            запрещена.</para></entry>
                </row>
                <row>
                    <entry><code>-i[gnore]</code></entry>
                    <entry><para>Игнорировать ошибки контрольных сумм при проверке.</para></entry>
                </row>
                <row>
                    <entry><code>-icu</code></entry>
                    <entry><para>Исправляет базу данных для работы с текущей версией
                        ICU.</para></entry>
                </row>
                <row>
                    <entry><code>-k[ill_shadow]
                        <replaceable>&lt;database&gt;</replaceable></code></entry>
                    <entry><para>Удаляет все неиспользуемые теневые копии базы данных</para></entry>
                </row>
                <row>
                    <entry><code>-l[ist]</code></entry>
                    <entry><para>Показывает некоторые сведения (в том числе ID) о всех зависших
                            транзакциях.</para></entry>
                </row>
                <row>
                    <entry><code>-me[nd]</code></entry>
                    <entry><para>Подготавливает испорченную базу данных для резервного копирования.
                            Помечает разрушенные записи как неиспользуемые.</para></entry>
                </row>
                <row>
                    <entry><code>-mo[de] {read_write | read_only}</code></entry>
                    <entry><para>Устанавливает режим записи для базы данных — только для чтения или
                            чтение/запись. Этот параметр может принимать два
                        значения.</para></entry>
                </row>
                <row>
                    <entry><code>-nol[inger]</code></entry>
                    <entry><para>Закрывает указанную базу данных, после того как последнего
                            соединения не стало, независимо от установок LINGER в базе
                            данных.</para></entry>
                </row>
                <row>
                    <entry><code>-n[o_update]</code></entry>
                    <entry><para>Используется вместе с <code>-v[alidate]</code> для проверки
                            разрушенных или неразмещенных структур. Если таковые есть, они
                            отобразятся в сообщении, но не будут исправлены.</para></entry>
                </row>
                <row>
                    <entry><code>-o[nline] [single | multi | normal]</code></entry>
                    <entry><para>Открывает закрытую после <code>-shut</code> базу данных. Опция
                            normal позволяет устанавливать соединение с БД любым авторизованным
                            пользователям, а не только SYSDBA и владельцем БД (она используется по
                            умолчанию). Опция multi позволяет устанавливать соединение с БД только
                            SYSDBA и владельцем БД. Опция single похожа на multi, за тем
                            исключением, что только один из пользователей — SYSDBA или владелец БД —
                            может соединиться.</para></entry>
                </row>
                <row>
                    <entry><code>-pr[ompt]</code></entry>
                    <entry><para>Используется вместе с <code>-l[ist]</code>. Выводит подсказки при
                            восстановлении транзакций.</para></entry>
                </row>
                <row>
                    <entry><code>-pa[ssword]
                        <replaceable>&lt;password&gt;</replaceable></code></entry>
                    <entry><para>Пароль пользователя для работы с gfix.</para></entry>
                </row>
                <row>
                    <entry><code>-role</code></entry>
                    <entry><para>Роль пользователя для работы с gfix.</para></entry>
                </row>
                <row>
                    <entry><code>-r[ollback] {<replaceable>&lt;ID&gt;</replaceable> |
                        all}</code></entry>
                    <entry><para>Завершает откатом зависшую транзакцию с идентификатором
                                <replaceable>&lt;ID&gt;</replaceable>, или все зависшие транзакции
                            (all).</para></entry>
                </row>
                <row>
                    <entry><code>-sq[l_dialect] <replaceable>&lt;n&gt;</replaceable></code></entry>
                    <entry><para>Изменяет диалект базы данных. <replaceable>&lt;n&gt;</replaceable>
                            может быть 1 или 3. Изменение диалекта не влияет на ранее созданные
                            объекты метаданных, они останутся в прежнем диалекте.</para></entry>
                </row>
                <row>
                    <entry><code>-sw[eep]</code></entry>
                    <entry><para>Запускает принудительную чистку БД.</para></entry>
                </row>
                <row>
                    <entry><code>-sh[utdown] {full | single | multi}</code></entry>
                    <entry><para>Закрывает базу данных. Используется с одним из дополнительных
                            параметров <code>-attach</code>, <code>-force</code> или
                                <code>-tran</code>. Опция multi позволяет устанавливать соединение с
                            БД только SYSDBA и владельцем БД. Опция single похожа на multi, за тем
                            исключением, что только один из пользователей — SYSDBA или владелец БД —
                            может соединиться. Опция full не позволяет соединиться с БД никому, даже
                            SYSDBA и владельцу БД.</para></entry>
                </row>
                <row>
                    <entry><code>-sw[o_phase] {<replaceable>&lt;ID&gt;</replaceable> |
                        all}</code></entry>
                    <entry><para>Автоматическое двухфазное восстановление limbo транзакции с номером
                                <replaceable>&lt;ID&gt;</replaceable>, или всех транзакций
                            (all).</para></entry>
                </row>
                <row>
                    <entry><code>-tra[nsaction] <replaceable>&lt;n&gt;</replaceable></code></entry>
                    <entry><para>Дополнительный параметр к <code>-shut</code>. Предназначен для
                            запрета запуска новых транзакций. <replaceable>&lt;n&gt;</replaceable>
                            указывает количество секунд, через которое произойдет отключение БД.
                            Отключение отменится, если к этому времени еще останутся активные
                            транзакции.</para></entry>
                </row>
                <row>
                    <entry><code>-tru[sted]</code></entry>
                    <entry>Используется trusted авторизацию.</entry>
                </row>
                <row>
                    <entry><code>-u[se] {full | reserve}</code></entry>
                    <entry><para>Включает 100% заполнение страниц БД (full) или 80% заполнение по
                            умолчанию (reserve). 100%-е заполнение имеет смысл для баз только для
                            чтения.</para></entry>
                </row>
                <row>
                    <entry><code>-user</code></entry>
                    <entry><para>Имя пользователя для работы с gfix.</para></entry>
                </row>
                <row>
                    <entry><code>-v[alidate]</code></entry>
                    <entry><para>Проверяет страницы базы данных, в том числе обнаруживает не
                            назначенные страницы (Orphan pages).</para></entry>
                </row>
                <row>
                    <entry><code>-w[rite] {sync|async}</code></entry>
                    <entry><para>Переключает режимы синхронной/асинхронной записи Forced
                            Writes.</para></entry>
                </row>
                <row>
                    <entry><code>-z</code></entry>
                    <entry><para>Выводит версию Firebird и утилиты gfix.</para></entry>
                </row>
                <row>
                    <entry><code>-?</code></entry>
                    <entry><para>Вывод экрана справочной информации.</para></entry>
                </row>
            </tbody>
        </tgroup>
    </table>

    <section xml:id="gfix-shadow">
        <title>Теневые копии</title>

        <para>Файл теневой копии является дополнительной копией первичного файла(ов) базы данных.
            Для любой данной базы данных может существовать несколько теневых копий, которые могут
            быть активированы и деактивированы по умолчанию с помощью утилиты
                <application>gfix</application>.</para>

        <para>Далее описании при активации и деактивации теневых файлов предполагается, что теневой
            файл уже существует для базы данных. Для этого была создана тень:
            <screen>
isql my_employee;
SQL> create shadow 1 manual '/home/norman/firebird/shadow/my_employee.shd1';
SQL> create shadow 2 manual '/home/norman/firebird/shadow/my_employee.shd2';
SQL> commit;
SQL> show database;
Database: my_employee
 Owner: SYSDBA
 Shadow 1: "/home/norman/firebird/shadow/my_employee.shd1" manual
 Shadow 2: "/home/norman/firebird/shadow/my_employee.shd2" manual
...
SQL> quit;            
        </screen>
        </para>
        <para>Можно видеть, что в базе данных теперь есть два отдельных теневых файла, но поскольку
            они являются ручными (manual), то они не были активированы. Мы можем увидеть их наличие
            запустив gstat следующим образом:
            <screen>
norman> gstat -header my_employee | grep -i shadow
Shadow count 2            
        </screen>
        </para>
        <section>
            <title>Активация теневой копии</title>

            <para>Для активации теневой копии используется команда <code>-ac[tivate]</code>:
                <synopsis>
gfix -ac[tivate] <replaceable>&lt;shadow_file_name&gt;</replaceable>                
            </synopsis>
            </para>

            <para>Эта команда делает файл теневой копии файлом базы данных, с помощью изменения
                заголовка базы данных.</para>

            <para>В случае, если ваш основной файл(ы) базы данных поврежден или нечитабелен,
                администратор базы данных может активировать теневой файл. После активации файл
                больше не является теневым файлом, и для его замены необходимо создать новый. Кроме
                того, теневой файл должен быть переименован на имя старого файла базы данных,
                который он заменяет.</para>

            <warning>
                <para>Следует отметить, что активация теневой копии, в то время как сама база данных
                    активна, может привести к повреждению тени. Перед ее активацией убедитесь, что
                    файл базы данных действительно недоступен.</para>
            </warning>

            <para>Как только файл теней был активирован, вы можете увидеть факт наличия активных
                теней в выводе gstat:
                <screen>
linux> gstat -header my_employee | grep -i shadow
Shadow count 2
Attributes   active shadow, multi-user maintenance                
            </screen>
            </para>

            <note>
                <para>Администратор базы данных может настроить базу данных для автоматического
                    создания нового теневого файла в случае активации текущей тени. Это позволяет
                    обеспечить непрерывную поставку теневых файлов и предотвращает работу базы
                    данных без нее.</para>
            </note>
        </section>


        <section>
            <title>Удаление теневых копий</title>

            <para>Удаление всех недоступных теневых копий конкретной базы данных производится
                командой:
                <synopsis>
gfix -k[ill] <replaceable>&lt;database_name&gt;</replaceable>                
            </synopsis>
            </para>

            <para>В случае, если база данных, работающая с теневыми файлами, теряет тень, или по
                какой-либо причине тень становится непригодной, база данных перестанет принимать
                новые соединения до тех пор, пока администратор базы не уничтожит поврежденную тень
                и, в идеале, создаст новую тень для замены сломанной.</para>

            <para>В следующем (надуманном) примере показано, что происходит, когда база данных
                теряет теневой файл и предпринимается попытка подключиться к этой базе данных. В
                следующем примере есть два сеанса, один из которых подключен к базе данных, а второй
                удаляет теневой файл, а затем пытается подключиться к базе данных.</para>

            <para>Сначала начальный сеанс подключается к базе данных и видит, что к нему прикреплены
                два теневых файла:
                <screen>
linux_1>isql my_employee
Database: my_employee
SQL> show database;
Database: my_employee
   Owner: SYSDBA
Shadow 1: "/home/norman/firebird/shadow/my_employee.shd1" manual
Shadow 2: "/home/norman/firebird/shadow/my_employee.shd2" manual
 ...                
            </screen>
            </para>
            <para>Во втором сеансе мы удаляем один из теневых файлов, а затем пытаемся подключиться
                к базе данных.
                <screen>
linux_2> rm /home/norman/firebird/shadow/my_employee.shd2
linux_2> isql_my_employee
Statement failed, SQLCODE = -901
lock conflict on no wait transaction
-I/O error for file "/home/norman/firebird/shadow/my_employee.shd2"
-Error while trying to open file
-No such file or directory
-a file in manual shadow 2 in unavailable
Use CONNECT or CREATE DATABASE to specify a database
SQL> quit;                 
            </screen>
            </para>
            <para>Второй сеанс не может подключиться к базе данных, пока проблема не будет
                устранена. Администратор баз данных может использовать команду <code>gfix
                    -k[ill]</code> для удаления недоступного файла теневой копии из базы данных,
                после чего второй (и последующие) сеансы смогут подключиться.
                <screen>
linux_2> gfix -kill my_employee
 
linux_2> isql my_employee
Database: my_employee
SQL> show database;
Database: my_employee
   Owner: SYSDBA
Shadow 1: "/home/norman/firebird/shadow/my_employee.shd1" manual
...                
            </screen>
            </para>

            <para>База данных теперь имеет один теневой файл вместо двух. Следует отметить, однако,
                что <application>gstat</application> по-прежнему показывает базу данных как имеющую
                две тени, даже если одна была удалена.</para>

            <screen>
linux> gstat -header my_employee | grep -i shadow
Shadow count 2
Attributes   active shadow, multi-user maintenance                
            </screen>

            <note>
                <para>При соединении с локальной базой данных пользователь может не обладать правом
                    на запуск сервиса <application>gfix</application>. Однако он сможет выполнить ту
                    или иную операцию, только если у него есть соответствующие права. Например, для
                    удаления теневой копии пользователь должен обладать правом на DDL-операцию DROP
                    SHADOW.</para>
            </note>
        </section>
    </section>

    <section xml:id="gfix-buffers">
        <title>Установка размера кэша базы данных</title>

        <para>Кэш базы данных — это область оперативной памяти, выделенная для хранения
            (кэширования) страниц базы данных в памяти, чтобы повысить эффективность работы с базой
            данных. Операции в оперативной памяти происходят гораздо быстрее, чем если данные
            постоянно считываются с диска.</para>

        <para>Размер кеша указывается в страницах. Размер памяти, занимаемый кэшем, зависит от
            количества страниц кэша и размера страниц БД. </para>

        <para>В различных архитектурах сервера страничный кэш используется по разному. В
            архитектурах Classic Server или Super Classic каждое соединение с базой данных получает
            свой собственный кэш, в то время как Super Server использует общий страничный кэш для
            всех соединений. Поэтому для архитектур Classic Server или Super Classic необходимо
            устанавливать относительно небольшой размер кэша (256-2048 страниц), в случае Super
            Server вы можете установить достаточно большой размер страничного кеша, например 100000
            и более страниц.</para>

        <para>Установить размер кэша в заголовок базы данных можно командой:
            <synopsis>
gfix -b[uffers] <replaceable>&lt;n&gt;</replaceable> <replaceable>database_name</replaceable>            
        </synopsis>
        </para>

        <para>Данная команда прописывает размер страничного кеша на заголовочную страницы базы
            данных. Значение на заголовочной странице перекрывает значение параметра
                <parameter>DefaultDbCachePages</parameter> в конфигурационных файла
                <filename>databases.conf</filename> и <filename>firebird.conf</filename>.</para>

        <para>Минимально допустимое значение равняется 50 страницам, максимальное в 32 разрядной
            версии Firebird равен 128000 страниц, в 64 разрядной —
                    <code>2<superscript>31</superscript> - 1</code>. Если размер страничного кеша на
            заголовочной странице установлен в 0, то страничный кеш будет размером равным значению
            параметра <parameter>DefaultDbCachePages</parameter> из
                <filename>databases.conf</filename> и <filename>firebird.conf</filename>. Если
            параметр <parameter>DefaultDbCachePages</parameter> закоментирован, то для архитектур
            Classic Server или Super Classic размер кеша будет равен 256 страниц, для Super Server —
            2048 страниц.</para>

        <para>Это действие применяется только к указанной вами базе данных. На другие базы данных,
            работающие на том же сервере, это изменение не повлияет.</para>

        <tip>
            <para>Рекомендуем вам не пользоваться этой командой. В Firebird 3.0 для каждой базы вы
                можете установить индивидуальный размер страничного кэша в файле
                    <filename>databases.conf</filename> используя параметр
                    <parameter>DefaultDbCachePages</parameter>. Это позволяет сосредоточить все
                связанные параметры в одном месте.</para>
        </tip>

        <para>В следующем примере показано использование <application>gstat</application> для чтения
            текущего количества буферов, утилита <application>gfix</application> используется для
            установки буферов на 4000 страниц, а <application>gstat</application> используется для
            подтверждения настройки. Нулевое значение для буферов страниц указывает, что
            используется значение параметра <parameter>DefaultDbCachePages</parameter> из
                <filename>databases.conf</filename> и <filename>firebird.conf</filename>.</para>

        <screen>
linux> gstat -header my_employee | grep -i "page buffers"
Page buffers    0
    
linux> gfix -buffers 4000 my_employee
    
linux> gstat -header my_employee | grep -i "page buffers"
Page buffers 4000            
        </screen>
    </section>

    <section xml:id="gfix-limbo">
        <title>Управление limbo транзакциями</title>

        <para><quote>Застрявшей</quote> (<quote>зависшей</quote>, <quote>in limbo</quote>)
            транзакцией называют транзакцию, которая работает одновременно с двумя или более базами
            данных. При завершении такой транзакции, Firebird совершает двухфазное подтверждение
            Commit, гарантируя, что изменения будут внесены либо во все БД, либо ни в одну. При этом
            подтверждения в базах данных будут даваться по очереди. Если в это время возникнет сбой
            системы, то может получиться, что в каких то БД изменения были сделаны, а в каких то
            нет. При этом транзакция переходит в неопределенное состояние, когда сервер не знает,
            следует ли подтвердить эту транзакцию, или откатить.</para>

        <para>Gfix предоставляет несколько команд, позволяющих управлять limbo транзакциями.</para>

        <section xml:id="gfix-limbo-list">
            <title>Список limbo транзакций</title>

            <para>Команда <code>gfix -l[ist]</code> будет отображать сведения о limbo транзакциях.
                Если команда не выдала результата, то зависших транзакций нет, и дальнейшие действия
                не требуются. Команда выглядит следующим образом:
                <synopsis>
gfix -l[ist] <replaceable>database_name</replaceable>                
            </synopsis>
            </para>

            <para>Пример перечисления неопределенных транзакций показан ниже. Эта команда
                выполняется для локальной базы данных на сервере с именем linux, где была выполнена
                транзакция с несколькими базами данных, подключенная к базам данных
                    <code>linux@my_employee</code> и <code>remote:testlimbo</code>. Обе эти имени
                базы данных имеют псевдонимы в <filename>databases.conf</filename>.</para>

            <screen>
linux> gfix -list my_employee
Transaction 67 is in limbo.
  Multidatabase transaction:
  Host Site: linux
  Transaction 67
has been prepared.
  Remote Site: remote
  Database path: /opt/firebird/examples/testlimbo.fdb                
            </screen>

            <para>Если команда выполняется для удаленной базы данных, то ничего не будет выведено,
                потому что в этой базе нет никаких limbo транзакций — транзакция, которая перешла в
                неопределенное (limbo) состояние, например, когда произошел сбой сети, была
                инициирована в локальной базе данных.</para>

            <para>Эту команду можно дополнить ключом <code>-pr[ompt]</code>, и тогда вам будет
                предложено выполнить Commit или Rollback для каждой обнаруженной транзакции limbo. В
                этом случае команда будет такой:
                <synopsis>
gfix -l[ist] -p[rompt] <replaceable>database_name</replaceable>                
            </synopsis>
            </para>

            <para>Пример вывода с дополнительным ключом <code>-pr[ompt]</code>
                <screen>
linux> gfix -list -prompt my_employee
Transaction 67 is in limbo.
  Multidatabase transaction:
  Host Site: linux
  Transaction 67
has been prepared.
  Remote Site: remote
  Database path: /opt/firebird/examples/testlimbo.fdb
Commit, rollback or neither (c, r, or n)?                
            </screen>
            </para>
        </section>
        <section>
            <title>Подтверждение или откат</title>

            <para>При обнаружении limbo транзакции администратор базы данных имеет возможность
                зафиксировать или откатить limbo транзакцию. Если обнаружено больше одной транзакции
                в состоянии in-limbo, то администратор может подтвердить (или откатить) все limbo
                транзакции или какую-то одну, по идентификатору.
                <synopsis>
gfix -commit {all | <replaceable>&lt;ID&gt;</replaceable>} <replaceable>database_name</replaceable>
                
gfix -rollback {all | <replaceable>&lt;ID&gt;</replaceable>} <replaceable>database_name</replaceable>                
            </synopsis>
            </para>

            <para>После работы этих команд <application>gfix</application> не выводит никаких
                сообщений о том, что эти команды отработали. Вам нужно будет повторно запустить
                команду <code>gfix -list</code>, чтобы убедиться, что limbo транзакций больше
                нет.</para>

            <para>Вы не можете зафиксировать или откатить транзакцию, которая не находится в
                подвешенном состоянии. Если вы попытаетесь, произойдет следующее:
                <screen>
linux> gfix -commit 388 my_employee
failed to reconnect to a transaction in database my_employee
transaction is not in limbo
-transaction 388 is active
unknown ISC error 0             
            </screen>
            </para>

            <para>При фиксации или откате всех limbo транзакций можно указать опцию
                    <code>-p[rompt]</code>. Однако это не разрешено при обработке одной транзакции.
                Пример использования опции <code>-p[rompt]</code> был показан выше в разделе <link
                    xlink:href="#gfix-limbo-list">Список limbo транзакций</link>.</para>
        </section>

        <section>
            <title>Автоматическое двухфазное восстановление</title>

            <para>Gfix можно использовать для автоматического двухфазного восстановления limbo
                транзакции с идентификатором, или всех транзакций:
                <synopsis>
gfix -t[wo_phase] {all | <replaceable>&lt;ID&gt;</replaceable>} <replaceable>database_name</replaceable>               
            </synopsis>
            </para>

            <para>При автоматическом восстановлении всех limbo транзакций можно указать опцию
                    <code>-p[rompt]</code>. Однако это не разрешено при обработке одной
                транзакции.</para>

            <note>
                <para>Так как при запуске <application>gfix</application> можно указать только одну
                    пару имя пользователя/пароль, то при восстановлении зависших двухфазных
                    транзакций, которые работали с базами данных на разных серверах, логин и пароль
                    пользователя, выполняющего восстановление, должны совпадать на всех
                    серверах.</para>
                <para>Кроме того, при использовании gfix -t все сервера и БД двухфазной транзакции
                    должны быть доступны (online).</para>
            </note>
        </section>
    </section>

    <section xml:id="gfix-read_write_mode">
        <title>Установка режима доступа для базы данных</title>

        <para>База данных может работать в одном из двух режимов доступа: только для чтения, или для
            чтения/записи (по умолчанию).</para>

        <para>Например, если вы хотите разместить базу данных на CD, DVD или другом read-only
            носителе, у вас не получится это сделать в режиме <quote>чтения-записи</quote>. После
            того, как база данных будет заполнена данными, ее следует изменить в режим только для
            чтения, а затем использовать на CD диске (или других файловых системах только для
            чтения) без проблем.</para>

        <note>
            <para>Firebird записывает информацию о транзакциях в базу данных, поэтому даже если вы
                выполняете операторы SELECT, всё равно требуется чтобы базы данных была размещена в
                файловой системе позволяющей чтение и запись.</para>
        </note>

        <para>Для изменения режима доступа к базе данных, выполните команду:
            <synopsis>
gfix -mo[de] {read_only | read_write} <replaceable>database</replaceable>            
        </synopsis>
        </para>

        <para>В следующем примере показано, как перевести базу данных в режим только для чтения, а
            затем снова изменить ее. В примере также показано, что происходит, когда вы пытаетесь
            обновить базу данных, работая в режиме только для чтения.</para>

        <screen>
linux> gfix -mode read_only my_employee

linux> isql my_employee
Database: my_employee

SQL> create table test(stuff integer);
Statement failed, SQLSTATE = 42000
Dynamic SQL Error
-attempted update on read-only database

SQL> quit;

linux> gfix -mode read_write my_employee

linux> isql my_employee
Database: my_employee

SQL> create table test(stuff integer);

SQL> show table test;
STUFF      INTEGER Nullable

SQL> quit;            
        </screen>

        <para>Если есть какие-либо подключения к базе данных в режиме чтения/записи, то при попытке
            преобразовать базу данных в режим только для чтения, будет выдана следующая
            ошибка.</para>

        <screen>
linux> gfix -mode read_only my_employee
lock time-out on wait transaction
-object /opt/firebird/databases/my_employee.fdb is in use

linux> echo $?
0            
        </screen>
    </section>

    <section xml:id="gfix-dialect">
        <title>Изменение SQL диалекта</title>

        <para>Диалект базы данных — это просто термин, который определяет специфические особенности
            языка SQL, доступные при доступе к этой базе данных. В настоящее время существует три
            диалекта: </para>
        <itemizedlist>
            <listitem>
                <para>Диалект 1 хранит информацию о дате и времени в типе данных DATE и имеет тип
                    данных TIMESTAMP, который идентичен типу DATE. Двойные кавычки используются для
                    разделения строковых данных. Точность для типов данных NUMERIC и DECIMAL меньше,
                    чем для базы данных диалекта 3, а если точность больше 9, Firebird сохраняет их
                    как DOUBLE PRECISION. INT64 не разрешен в качестве типа данных.</para>
            </listitem>
            <listitem>
                <para>Диалект 2 доступен только при подключении клиента Firebird и не может быть
                    установлен в базе данных. Он предназначен для отладки возможных проблем с
                    устаревшими данными при переносе базы данных с диалекта 1 на 3. Этот диалект не
                    может быть установлен для базы данных с использованием
                        <application>gfix</application>. </para>
            </listitem>
            <listitem>
                <para>Базы данных диалекта 3 позволяют сохранять числа (типы данных DECIMAL и
                    NUMERIC) как INT64, если точность больше 9. Тип данных TIME может использоваться
                    и хранить только данные времени. Тип данных DATE хранит информацию о дате.
                    Двойные кавычки могут использоваться, но только для идентификаторов, которые
                    зависят от регистра, но не для строковых данных, которые должны использовать
                    одинарные кавычки.</para>
            </listitem>
        </itemizedlist>
        <para>Подробнее о разнице SQL диалектов вы можете прочитать в документе <link
                xlink:href="https://firebirdsql.org/manual/isql-dialects.html">SQL
            Dialects</link>.</para>
        <para>Для изменения диалекта SQL для базы данных используется следующая команда:
            <synopsis>
gfix -s[ql_dialect] <replaceable>&lt;dialect&gt;</replaceable> <replaceable>&lt;databasee&gt;</replaceable>            
        </synopsis>
        </para>

        <para>Параметр <code><replaceable>&lt;dialect&gt;</replaceable></code> должен быть 1 или
            3.</para>

        <para>В следующем примере изменяется диалект базы данных на 3, что позволит использовать
            многие новые функции SQL 92. Изменение диалекта БД не влияет на диалект уже созданных
            объектов баз данных (check constraint, view, процедуры, триггеры). Установленный для БД
            диалект будет действовать только при создании или изменении объектов БД, и разумеется,
            при выполнении SQL запросов (с клиента или execute statement).</para>

        <screen>
linux> gfix -sql_dialect 3 my_employee

linux> gstat -header my_employee | grep dialect
Database dialect    3

linux> gfix -sql_dialect 1 my_employee

linux> gstat -header my_employee | grep dialect
Database dialect    1            
        </screen>

        <para>Вы можете использовать команду <application>isql</application>
            <code>SHOW SQL DIALECT</code>, чтобы увидеть, какой диалект используют ваш клиент и база
            данных, как показано ниже:
            <screen>
linux> isql employee -user sysdba
Database: employee, User: SYSDBA
SQL> show sql dialect;
        Client SQL dialect is set to: 3 and database SQL dialect is: 3            
        </screen>
        </para>

        <para>Хотя использование диалект 2 возможно на клиенте, попытка установить диалект 2 на
            сервере не удастся. Диалект 2 является тестовым диалект для проверки перевода метаданных
            БД в третий диалект. Это показано в следующем примере.</para>

        <screen>
linux> gfix -sql_dialect 2 my_employee
Database dialect 2 is not a valid dialect.
-Valid database dialects are 1 and 3.
-Database dialect not changed.            
        </screen>

        <para>Чтобы установить диалект 2 для использования в клиентском приложении
                <application>isql</application> выполните:
            <screen>
linux> isql my_employee
Database: my_employee

SQL> set sql dialect 2;
WARNING: Client SQL dialect has been set to 2 when connecting to Database SQL dialect 3 
database.

SQL> show sql dialect;
        Client SQL dialect is set to: 2 and database SQL dialect is: 3
        </screen>
        </para>
    </section>

    <section xml:id="gfix-sweep">
        <title>Чистка (sweep) базы данных</title>

        <section>
            <title>Сборка мусора и sweep</title>

            <para>Многоверсионная архитектура Firebird может порождать ситуацию, когда множество
                версий строк данных хранится непосредственно на страницах базы данных. Firebird
                сохраняет старые версии при изменении или удалении записи. Версии записей, которые
                не нужны ни одной активной транзакции называются мусорными версиями. При нормальном
                ходе событий устаревшие версии записей, созданные изменёнными данными, вычищаются
                фоновой или кооперативной сборкой мусора.</para>

            <para><emphasis>Кооперативная сборка</emphasis> мусора возможна в любой архитектуре
                сервера. Кооперативность сборки мусора проявляется в том, что "мусорные" версии
                детектируются только при чтении этих самых версий. То есть до тех пор, пока запись с
                версиями не прочитана ни в одной транзакции, ее версии остаются на диске и как мусор
                не собираются (если, конечно, в данный момент они неактуальны, и действительно
                являются мусором).</para>
            <para><emphasis>Фоновая сборка</emphasis> мусора возможна только в архитектуре
                SuperServer. При обнаружении мусорных версий на странице (при чтении и обновлении)
                об этом сигнализируется потоку (thread) сборщика мусора. Сборщик мусора периодически
                собирает мусор на помеченных страницах.</para>

            <para>В Firebird можно управлять стратегией сборки мусора. Для этого в конфигурации
                    (<filename>firebird.conf</filename> и <filename>databases.conf</filename>) есть
                параметр <parameter>GCPolicy</parameter>, который имеет 3 варианта: <itemizedlist>
                    <listitem>
                        <para>background – сборщик мусора работает как фоновый, собирая мусор
                            отдельным потоком (thread);</para>
                    </listitem>
                    <listitem>
                        <para>cooperative – сборщик мусора работает в кооперативном режиме, собирая
                            мусор немедленно при чтении "мусорных" версий;</para>
                    </listitem>
                    <listitem>
                        <para>combined – сборщик мусора работает в кооперативном режиме, но если
                            мусор собрать не удается, то о "замусоренных" страницах сигнализируется
                            фоновому сборщику мусора.</para>
                    </listitem>
                </itemizedlist></para>

            <para>Чистка базы данных (sweep) является способом систематического удаления устаревших
                строк из базы данных. При старте sweep он просматривает все страницы данных и
                индексов в базе данных, и убрать все мусорные версии, существующие на текущий
                момент. А также, попытаться подвинуть <quote>вверх</quote> застрявшую OIT (Oldest
                Interesting Transaction, OIT — находится в любом состоянии, кроме подтвержденного.
                Возможна эта транзакция всё ещё активная или в состоянии Limbo, либо отменена). То
                есть, если кооперативная сборка мусора возникает только при чтении конкретных
                записей, то sweep — это принудительная сборка мусора во всех таблицах базы данных
                (то есть, грубо говоря, sweep это принудительное чтение всего файла БД с
                вероятностью операций записи — собственно сборки мусора).</para>

            <para>Для чего sweep пытается собрать мусор во всей базе данных? Для того, чтобы
                подвинуть "вверх" номер Oldest Interesting Transaction (Oldest transaction в
                    <code>gstat -h</code>). Дело в том, что единственные транзакции, которые
                приводят к "залипанию" Oldest на месте, это транзакции, которые завершились
                Rollback, и для которых сервер не смог отменить все изменения по сохраненным в
                памяти savepoints (это либо dead транзакции, обнаруженные после аварийного
                завершения сервера, либо объём изменений превышает ~50000 записей). То есть, пока
                все версии, созданные этой транзакцией, не будут отменены, ее состояние нельзя
                изменить в committed. А транзакции snapshot оценивают состояния конкурирующих
                транзакций и возможность модификации записей именно от Oldest transaction до Next
                transaction. Собственно, при чтении версий, номер транзакций которых меньше Oldest
                transaction, сервер даже не проверяет наличие версий, потому что таковых нет и быть
                не может, а кроме того, все транзакции меньше Oldest обязательно находятся в
                состоянии committed (т. е. их версии можно читать).</para>

            <para>Таким образом, если у нас в БД возникает транзакция, отмененная по rollback (опять
                же, для которой сервер не смог отменить изменения по savepoints), то это означает,
                что каждая следующая транзакция будет проверять версии на состояние транзакций от
                Next до Oldest. И чем больше этот интервал, тем больше страниц Transaction Inventory
                Page (хранящих состояния транзакций) будет считываться в кэш, и тем больше этих
                страниц будут запоминать в "локальной памяти" для транзакции snapshot.
                Соответственно, просто с ростом числа транзакций производительность будет
                деградировать.</para>

            <para>Для уменьшения объёма чтения при выполнении чистки начиная с ODS 12.0 (Firebird
                3.0) на страницах DP (Data Page) и PP (Pointer Page) был введён swept флаг. Этот
                флаг выставляется на странице при посещении сборщиком мусора или sweep, если на ней
                вычищены все мусорные версии. Если на такой странице будет создана новая версия, то
                флаг сбрасывается. При выполнении sweep проверяет значение swept флага, и если он
                истинен (на странице нет мусора), то sweep может не посещать данную страницу. Это
                позволяет значительно уменьшить объём физического чтения с диска при повторном
                выполнении sweep, если, конечно, вы не изменяете все страницы базы данных.</para>

            <warning>
                <para>Восстановление базы данных из бэкапа с помощью gbak приведёт к тому, что все
                    страницы новой базы данных будут со сброшенным swept флагом. Поэтому первая же
                    чистка (sweep) базы данных прочитает и модифицирует абсолютно все страницы
                    (будет долгой).</para>
            </warning>

            <para>Чистка может производится в ручном и автоматическом режиме. В автоматическом
                режиме чистка запускается при достижении так называемого интервала чистки (sweep
                interval).</para>


            <para>Интервал чистки (sweep interval) — разница между Oldest Transaction (или Oldest
                Interesting Transaction, OIT) и Oldest Snapshot Transaction (OST). По умолчанию для
                новых баз данных интервал чистки (sweep interval) равен 20000 транзакций. Посмотреть
                интервал чистки (Sweep interval) можно с помощью команды <code>gstat
                –h</code>.</para>
        </section>

        <section>
            <title>Изменение sweep interval</title>

            <para>Изменить интервал чистки для конкретной базы данных можно с помощью опции
                    <code>-h[ouskeeping]</code>:
                <synopsis>
gfix -h[ousekeeping] <replaceable>&lt;interfval&gt;</replaceable> <replaceable>&lt;database&gt;</replaceable>                
            </synopsis>
            </para>

            <para>Параметр <replaceable>&lt;interfval&gt;</replaceable> — это новое значение
                интервала чистки. В следующем примере показано изменение параметра со значения по
                умолчанию на новое значение 30000.</para>
            <synopsis>
linux> gfix -h 30000 my_employee                
            </synopsis>
            <screen>
linux> gstat -header my_employee | grep Sweep
Sweep interval:     30000                
            </screen>
        </section>

        <section>
            <title>Отмена автоматического sweep</title>

            <para>Если установить интервал чистки в 0, то в этом случае автоматическая чистка
                выполняться будет.</para>

            <para>Автоматический sweep базы данных приходит в непредсказуемые моменты. Поскольку при
                выполнении sweep будет прочитано значительное количество страниц (или даже все
                страницы) базы данных, то это может приводить к резкой просадки производительности
                при работе с базой данных во время sweep. Если вы наблюдаете подобные симптомы, то
                рекомендуем вам отключить автоматический sweep и выполнять ручной sweep по
                расписанию в период наименьшей активности базы данных.</para>
        </section>

        <section>
            <title>Выполнение ручного sweep</title>

            <para>Администратор может запустить чистку (sweep) вручную с помощью следующей команды:
                <synopsis>
 gfix -s[weep]  <replaceable>&lt;database&gt;</replaceable>                
            </synopsis>
            </para>

            <para>В следующем примере показан запуск sweep вручную:
                <screen>
linux> gfix -sweep my_employee                
            </screen>
            </para>
        </section>

        <section>
            <title>Отслеживание запусков sweep</title>

            <para>В файл <filename>firebird.log</filename> пишутся события начала и окончания sweep,
                а так же ошибки которые возникли во время sweep, помешавшие его выполнению. Для
                событий начала и окончания sweep в журнал пишутся также значения счётчиков
                транзакций, которые были на этот момент.</para>

            <para>Это позволяет отследить, успешно ли выполнена чистка (sweep), а так же
                сопоставлять связаны ли проблемы производительности с процедурой начала
                sweep.</para>

            <para>Для события начала sweep запись в <filename>firebird.log</filename> выглядит
                следующим образом: <programlisting>
<![CDATA[
     Sweep is started by <user name>
     Database <database name>
     OIT <n>, OAT <n>, OST <n>, Next <n>
]]>                    
                </programlisting>
            </para>
            <para>Если sweep начался в автоматическом режиме, то в качестве имени пользователя будет
                указано SWEEPER, иначе (ручной запуск) — SYSDBA или владелец базы данных.</para>
            <para>Для события успешного окончания sweep запись в <filename>firebird.log</filename>
                выглядит следующим образом: <programlisting>
<![CDATA[
     Sweep is finished
     Database <database name>
     OIT <n>, OAT <n>, OST <n>, Next <n>
]]>                    
                </programlisting>
            </para>
            <para>Если во время sweep произошла ошибка, в <filename>firebird.log</filename> будет
                записано: <programlisting>
<![CDATA[
     Error during sweep:
     <error details>
]]>                    
                </programlisting>
            </para>
            <para>Ниже приведён пример записей в <filename>firebird.log</filename> о различных
                событиях, связанных со sweep:
                <screen>
               

BIGSRV (Server) Wed Dec 12 15:22:05 2019
Error during sweep:deadlock

....

BIGSRV (Server)	Wed Dec 12 19:30:16 2019
	Sweep is started by SWEEPER
	Database "D:\RTDATACOLLECTOR\DATABASE\DATABASE.FDB" 
	OIT 3086403, OAT 4338117, OST 4337973, Next 4338183

.....

BIGSRV (Server)	Wed Dec 12 20:23:27 2019
	Sweep is finished
	Database "D:\RTDATACOLLECTOR\DATABASE\DATABASE.FDB" 
	OIT 4337972, OAT 4572476, OST 4572408, Next 4572596
         
           </screen>
            </para>
        </section>
    </section>

    <section xml:id="gfix-shutdown_online">
        <title>Открытие (online) и закрытие (shutdown) базы данных</title>

        <section xml:id="gfix-shutdown">
            <title>Закрытие (shutdown) базы данных</title>

            <para>Закрытие базы данных означает, что база данных переводится в особый режим, в
                котором к ней запрещены некоторые подключения, в зависимости от указанного
                состояния. Полноценная работа с закрытой базой данных возможна только после
                обратного ее перевода в открытый режим.</para>
            <para>Закрытие базы данных может быть необходимо для получения монопольного доступа к
                ней и проведения действий по восстановлению структуры базы и/или хранящихся в ней
                данных.</para>
            <para>Для закрытия базы данных используется команда <code>-sh[ut]</code>. Совместно с
                этой командой указывается режим отключения существующих соединений и время ожидания
                (в секундах) до полной блокировки. При этом реального отключения соединений не
                происходит, но вся активность в их принудительно прекращается.
                <synopsis>
gfix -sh[ut] <replaceable>&lt;state&gt;</replaceable> <replaceable>&lt;mode&gt;</replaceable> <replaceable>timeout</replaceable> <replaceable>database</replaceable>   
                
<replaceable>&lt;state&gt;</replaceable> ::= {full | single | multi}         
                
<replaceable>&lt;mode&gt;</replaceable> ::= { -at[tach] | -tr[аn] | -f[orce] }                   
            </synopsis>
            </para>

            <para>После закрытия база данных переводится в одно из следующих состояний: <itemizedlist>
                    <listitem>
                        <para>full — в этом состоянии запрещены любые подключения, даже SYSDBA и
                            владельца базы данных. В этом случае подключение возможно только в
                            режиме embedded. Это состояние отображается в <code>gstat -h</code> как
                            full shutdown; </para>
                    </listitem>
                    <listitem>
                        <para>multi — в этом состоянии пользователи SYSDBA и владелец базы данных
                            могут делать неограниченное количество подключений. Все остальные
                            соединения запрещены. Это состояние используется по умолчанию при
                            блокировке базы данных. Это состояние отображается в <code>gstat
                                -h</code> как multi-user maintenance;</para>
                    </listitem>
                    <listitem>
                        <para>single — в этом состоянии пользователю SYSDBA или владельцу базы
                            данных позволено одно подключение к базе данных. Все остальные
                            соединения запрещены. Это состояние отображается в <code>gstat -h</code>
                            как single-user maintenance. </para>
                    </listitem>
                </itemizedlist></para>

            <para>Закрытие базы данных может происходить в одном из следующих режимов: <itemizedlist>
                    <listitem>
                        <para><code>-at[tach]</code> — предотвращение новых соединений;</para>
                    </listitem>
                    <listitem>
                        <para><code>-tr[an]</code> — предотвращение старта новых транзакций;</para>
                    </listitem>
                    <listitem>
                        <para><code>-f[orce]</code> — принудительной закрытие базы данных, с отменой
                            всех активных транзакций.</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>Далее рассмотрим эти режимы подробнее.</para>

            <section>
                <title>Предотвращение новых соединений</title>

                <para>Закрытие базы данных в режиме <code>-at[tach]</code> означает, что все новые
                    соединения к базе данных запрещены. Существующие соединения при этом не
                    разрываются. Число <replaceable>timeout</replaceable> определяет количество
                    секунд, которое сервер будет ждать до завершения всех активных соединений к базе
                    данных. Если после этого не останется ни одного активного соединения, то база
                    данных будет закрыта. В противном случае, закрытие базы данных будет
                    отменено.</para>
                <screen>
linux> gfix -shut full -attach 5 my_employee
-database shutdown unsuccessful                   
                </screen>
                <para>Если закрытие базы данных произойдет успешно, то никаких сообщений не будет
                    выведено.</para>
            </section>

            <section>
                <title>Предотвращение новых транзакций</title>

                <para>При указании режима <code>-tra[nsaction]</code> сервер заблокирует старт новых
                    транзакций в закрываемой базе данных. Если по истечении
                        <replaceable>timeout</replaceable> секунд к базе не останется ни одного
                    активного подключения, то база данных будет закрыта. В противном случае закрытие
                    базы данных будет отменено.</para>
                <screen>
linux> gfix -shut full -tran 5 my_employee
-database shutdown unsuccessful                      
                </screen>
            </section>

            <section>
                <title>Принудительное закрытие базы данных</title>

                <para>При закрытии базы данных в режиме <code>-fo[rce_shutdown]</code> сервер будет
                    ждать завершения всех активных соединений к базе данных. По истечении времени
                        <replaceable>timeout</replaceable> база будет закрыта вне зависимости от
                    того, есть ли еще к ней активные соединения. В этом режиме происходит отмена
                    всех активных транзакций, и он гарантирует, в отличие от двух предыдущих, что
                    база будет переведена в закрытое состояние.</para>
            </section>
        </section>
        <section xml:id="gfix-online">
            <title>Открытие (online) базы данных</title>

            <para>После выполнения всех работ по обслуживанию, необходимых для базы данных, вам
                необходимо открыть базу данных, чтобы снова разрешить ее нормальное использование.
                Перевести закрытую базу снова в открытое состояние можно только с помощью команды
                    <code>-on[line]</code></para>

            <synopsis>
gfix -on[line] <replaceable>&lt;state&gt;</replaceable> <replaceable>database</replaceable>   
  
<replaceable>&lt;state&gt;</replaceable> ::= {normal | single | multi}   
            </synopsis>

            <para>После открытия база данных переводится в одно из следующих состояний: <itemizedlist>
                    <listitem>
                        <para>normal — к базе данных могут подключаться любые авторизованные
                            пользователи. Этот режим используется по умолчанию при открытии базы
                            данных; </para>
                    </listitem>
                    <listitem>
                        <para>multi — в этом состоянии пользователи SYSDBA и владелец базы данных
                            могут неограниченно подключаться к базе данных. Все остальные соединения
                            запрещены; </para>
                    </listitem>
                    <listitem>
                        <para>single — в этом состоянии пользователю SYSDBA или владельцу базы
                            данных позволено одно подключение к базе данных. Все остальные
                            соединения запрещены. </para>
                    </listitem>
                </itemizedlist></para>

            <note>
                <para>Опции single и multi не переводят базу в online. Они лишь понижают уровень
                    состояния shutdown: <itemizedlist>
                        <listitem>
                            <para><code>-online single</code> — из full до single</para>
                        </listitem>
                        <listitem>
                            <para><code>-online multi</code> — из full или single до multi.</para>
                        </listitem>
                    </itemizedlist></para>
                <para>Только команда <code>-online [normal]</code> переводит БД из любого состояние
                    в открытое (online).</para>
            </note>
        </section>
    </section>

    <section xml:id="gfix-use_space">
        <title>Использование пространства страниц базы данных</title>

        <para>Обычно Firebird резервирует на страницах данных (DP — Data Page) 20% свободного
            пространства для версий и фрагментов записей. Это оптимальный режим для баз данных в
            которых происходят модификации записей.</para>

        <para>Для использования всего доступного пространства страницы базы данных вы можете
            использовать команду <code>-use full</code>. Если впоследствии вы захотите вернуться к
            режиму по умолчанию, введите команду <code>-use reserve</code>, чтобы использовать
            только 80% каждой страницы.</para>

        <synopsis>
gfix -use {full|reserve} <replaceable>database</replaceable>             
        </synopsis>

        <para>В следующем примере база данных переводится в режим использования всего доступного
            пространства на каждой странице данных базы данных:
            <screen>
linux> gfix -use full my_employee
linux> gstat -header my_employee | grep Attributes
Attributes no reserve            
        </screen>
        </para>
        <para>В следующем примере возвращается использование пространства для страниц данных по
            умолчанию:
            <screen>
linux> gfix -use reserve my_employee
linux> gstat -header my_employee | grep Attributes
Attributes          
        </screen>
        </para>

        <para>Если база данных находится в режиме полного использования пространства страниц, то в
            Attributes это будет отображено текстом <quote>no reserve</quote>. Этот текст не
            отображается для обычного режима использования 80%.</para>

        <note>
            <para>Режим <quote>no reserve</quote> не годится для часто модифицируемых данных. Он
                хорошо подходит только для read-only БД. В настоящий момент не существует способа
                задать режим резервирования индивидуально для каждой таблицы.</para>
        </note>
    </section>

    <section xml:id="gfix-validate_recovery">
        <title>Проверка и исправление базы данных</title>

        <section xml:id="gfix-validate">
            <title>Проверка базы данных</title>

            <para>При некорректном завершении работы сервера, аппаратном или программном сбое
                возможно появление различных ошибок в базе данных. Проверка базы данных с помощью
                утилиты gfix поможет найти такие фрагменты в базе данных и выбрать способ
                исправления той или иной ошибки. Проверку базы данных рекомендуется производить не
                только после аппаратных или программных сбоев в работе сервера, но и при
                возникновении любой ошибки при работе с базой данных, которая не связана с
                некорректно построенным запросом или проблемами с сетью, при ошибках резервного
                копирования/восстановления, а также с определенной периодичностью в профилактических
                целях.</para>

            <note>
                <para>Проверка базы данных требует, чтобы у вас был эксклюзивный доступ к базе
                    данных. Чтобы запретить другим пользователям доступ к базе данных во время ее
                    проверки, используйте команду <code>gfix -shut</code>, чтобы <link
                        xlink:href="#gfix-shutdown">закрыть базу данных</link>.</para>
                <para>Начиная с Firebird 2.5.9 появилась возможность делать онлайн проверку базы
                    данных. Однако, в этом случае не проверяются страницы Header\PIP\TIP\Generators
                    и системные таблицы. Подробнее смотри в разделе <link
                        xlink:href="#gfix-validate-online">Онлайн проверка</link>.</para>
            </note>

            <para>Проверка базы данных выполняется с помощью команды
                <code>-v[alidate]</code>.</para>

            <section>
                <title>Проверка в режиме по умолчанию</title>

                <para>При проверке базы данных по умолчанию выполняются следующие проверки и
                    исправления: <itemizedlist spacing="compact">
                        <listitem>
                            <para>Освобождаются потерянные страницы (orphan pages). Это обновляет
                                базу данных.</para>
                        </listitem>
                        <listitem>
                            <para>Сообщается о страницах которые были неверно распределены.</para>
                        </listitem>
                        <listitem>
                            <para>Сообщается о поврежденных структурах.</para>
                        </listitem>
                    </itemizedlist></para>

                <para>Результаты работы утилиты <application>gfix</application> сохраняются в
                    лог-файле сервера — <filename>firebird.log</filename>, суммарный результат
                    проверки выводится на консоль. Если ошибок не было — на консоль ничего не
                    выводится.</para>

                <para>Команда для проверки базы данных по умолчанию выглядит следующим образом:
                    <synopsis>
gfix -v[alidate] <replaceable>database</replaceable>               
            </synopsis>
                </para>

                <para>Эта команда проверяет базу данных, исправляет поврежденные структуры и
                    освобождает потерянные страницы (orphan pages). Потерянная страница — это
                    страница, которая была распределена, но затем не связана с другими страницами,
                    например, когда сервер был перезагружен.  </para>
            </section>

            <section>
                <title>Полная проверка</title>

                <para>По умолчанию проверка работает на уровне страниц. Для проверки и на уровне
                    страниц, и на уровне записей используйте команду:
                    <synopsis>
gfix -v[alidate] -full <replaceable>database</replaceable>               
            </synopsis>
                </para>

                <para>Эта опция обновляет базу данных и исправляет любые поврежденные
                    структуры.</para>
            </section>

            <section>
                <title>Проверка в режиме чтения</title>

                <para>Как объяснялось выше, проверка базы данных фактически проверяет и обновляет
                    структуры базы данных, чтобы вернуть базу данных в рабочее состояние. Однако вы
                    можете не захотеть, чтобы это произошло, и в этом случае вы должны выполнить
                    проверку в режиме только чтение, которая просто сообщает о любых проблемных
                    областях и не вносит никаких изменений в базу данных.</para>

                <para>Чтобы выполнить проверку только для чтения, просто укажите опцию
                        <code>-n[o_update]</code> для любой командной строки, которую вы используете
                    для проверки. Чтобы выполнить полную проверку на уровне записей и страниц,
                    только в режиме отчета, используйте следующую команду:
                    <synopsis>
gfix -v[alidate] -full -n[o_update] <replaceable>database</replaceable>               
            </synopsis>
                </para>

                <para>Если нужно проверить базу данных только на уровне страниц, то команда будет
                    такой:
                    <synopsis>
gfix -v[alidate] -n[o_update] <replaceable>database</replaceable>               
            </synopsis>
                </para>
            </section>

            <section>
                <title>Игнорирование ошибок контрольных сумм</title>

                <para>Контрольные суммы используются для проверки целостности данных на странице.
                    Если контрольная сумма не совпадает, то возможно, произошло повреждение базы
                    данных. Вы можете запустить проверку базы данных, с игнорированием контрольных
                    сумм, используя опцию <code>-i[gnore]</code>.</para>

                <para>Эта опция может быть объединена с опцией <code>-n[o_update]</code>, описанной
                    выше, и применяется как к полной проверке, так и к проверке по умолчанию. Таким
                    образом, чтобы выполнить полную проверку и игнорировать контрольные суммы в базе
                    данных, но только сообщать об ошибках, используйте следующую команду:
                    <synopsis>
gfix -v[alidate] -full -i[gnore] -n[o_update] <replaceable>database</replaceable>               
            </synopsis>
                </para>

                <para>В качестве альтернативы, можно выполнить проверку на уровне страниц, игнорируя
                    ошибки контрольных сумм, но обновляя структуры базы данных для ее исправления. В
                    этом случае команда будет такой:
                    <synopsis>
gfix -v[alidate] -i[gnore] <replaceable>database</replaceable>               
            </synopsis>
                </para>
            </section>

            <section xml:id="gfix-validate-online">
                <title>Онлайн проверка</title>

                <para>TODO: Будет описано в FBSVCMGR. Дать ссылку.</para>
            </section>
        </section>
        <section>
            <title>Восстановление базы данных</title>

            <para>Если проверка базы данных, описанная выше, ничего не выводит, то структуры базы
                данных можно считать действительными. Если же в ходе проверки базы данных, были
                найдены ошибки, то можно попытаться исправить базу данных. </para>

            <section>
                <title>Удаление поврежденных структур данных</title>

                <para>Команда <code>gfix -m[end]</code> помечает поврежденные структуры как
                    неиспользуемые. Однако и она не в состоянии исправить все ошибки и может
                    привести к потере данных (поврежденных записей). Команда выглядит следующим
                    образом:
                    <synopsis>
gfix -m[end] <replaceable>database</replaceable>               
            </synopsis>
                </para>

                <para>Выполнение этой команды приводит к тому, что записи с повреждениями будут
                    удалены.  Последующие действия с базой данных (например, создание резервной
                    копии) не будут включать поврежденные записи.</para>

                <important>
                    <para>Лучший способ избежать потери данных — регулярно делать резервное
                        копирование и проверять копии на возможность восстановления. При попытке
                        исправить поврежденную базу данных всегда работайте с копией основного
                        файла, а не с оригиналом. Использование опции <code>-mend</code> может
                        привести к автоматическому удалению поврежденных данных, потому что
                            <application>gfix</application> не заботится о внутренних ограничениях
                        базы данных, таких как внешние ключи и других.</para>
                </important>
            </section>

            <section>
                <title>Сторонние инструменты и сервисы для расширенного восстановления</title>

                <para>Если <application>gfix</application> не может исправить поврежденную базу
                    данных, то доступны <link
                        xlink:href="https://firebirdsql.org/en/third-party-tools#rec">сторонние
                        инструменты</link> для восстановления баз данных Firebird.</para>
            </section>
        </section>
    </section>

    <section>
        <title>Изменение режима записи на диск</title>

        <para>Многие операционные системы применяют кеширование операций ввода-вывода. При этом для
            буферизации используется некоторый объем быстрой памяти (который может быть как частью
            оперативной памяти сервера, так и специальной памятью, встроенной в сам диск). Это
            повышает производительность приложений, их интенсивность записи, но пользователь не
            будет уверен, когда его данные будут записаны на физический диск.</para>
        <para>При работе с базой данных крайне желательно, чтобы данные были безопасно сохранены. В
            Firebird можно указать должны ли данные сразу записываться на физический диск по commit
            или в отложенном режиме (ОС сама решит когда записать).</para>
        <para>Для изменения режима записи на диск используется следующая команда:
            <synopsis>
gfix -write <replaceable>&lt;mode&gt;</replaceable> <replaceable>database</replaceable>

<replaceable>&lt;mode&gt;</replaceable> ::= {sync | async}
        </synopsis>
        </para>

        <para>Параметр <replaceable>mode</replaceable> указывает в каком режиме буду записываться
            данные: <itemizedlist>
                <listitem>
                    <para>sync — данные записываются синхронно (Forced writes). Это означает, что
                        данные записываются на диск в COMMIT. Это наиболее безопасно для ваших
                        данных. </para>
                </listitem>
                <listitem>
                    <para>async — данные записываются асинхронно. Операционная система контролирует,
                        когда данные фактически записываются на диск.</para>
                </listitem>
            </itemizedlist></para>

        <para>По умолчанию, все БД работают с включенным Forced Writes (sync) и отключать этот режим
            не рекомендуется. Если все же вы не удовлетворены производительностью БД, и при этом
            стопроцентно уверены в своем серверном оборудовании, можете попробовать отключить Forced
            Writes.</para>
        <para>Команда <code>gstat -h</code> отображает режим sync как Forced Writes в строке Attributes, режим
            async никак не отображается.
        <screen>
C:\Firebird\3.0>gstat -h test | grep Attributes
STDIN
        Attributes              force write

C:\Firebird\3.0>gfix -user sysdba -password masterkey -write async test

C:\Firebird\3.0>gstat -h test | grep Attributes
STDIN
        Attributes            
        </screen>
        </para>
    </section>

    <section>
        <title>Исправление базы данных для работы с текущей версией ICU</title>

        <para>Если база данных была создана на севере с одной версии библиотеки ICU, а затем
            перенесена на другой сервер с другой версией ICU, то в ряде случае могут возникать
            проблемы при использовании сопоставлений (COLLATION), зависимых от ICU. Такой случай
            описан в билете <link xlink:href="http://tracker.firebirdsql.org/browse/CORE-4571"
                >CORE-4571</link>. Для решения этой проблемы в gfix существует команда -icu.</para>
        <synopsis>
gfix -icu <replaceable>icu_version</replaceable> <replaceable>database</replaceable>            
        </synopsis>
        <para>Данная команда обновляет сопоставления (COLLATION), зависимые от ICU, и перестраивает
            зависимые индексы. </para>
    </section>

    <section>
        <title>Информация о версии</title>

        <para>Опция <code>-z</code> для <application>gfix</application> просто выводит версию
            программного обеспечения Firebird, которое вы используете. Она не принимает параметров,
            как показано в следующем примере
            <screen>
C:\Firebird\3.0>gfix -z
gfix version WI-V3.0.6.33254 Firebird 3.0            
        </screen>
        </para>
    </section>
</chapter>
